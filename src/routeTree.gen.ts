/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthentificationIndexImport } from './routes/authentification/index'
import { Route as SharePlatformChoiceIndexImport } from './routes/share/platform-choice/index'
import { Route as SharePlatformChoiceTidalImport } from './routes/share/platform-choice/tidal'
import { Route as SharePlatformChoiceSpotifyImport } from './routes/share/platform-choice/spotify'
import { Route as SharePlatformChoiceDeezerImport } from './routes/share/platform-choice/deezer'
import { Route as SharePlatformChoiceAppleMusicImport } from './routes/share/platform-choice/apple-music'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthentificationIndexRoute = AuthentificationIndexImport.update({
  id: '/authentification/',
  path: '/authentification/',
  getParentRoute: () => rootRoute,
} as any)

const SharePlatformChoiceIndexRoute = SharePlatformChoiceIndexImport.update({
  id: '/share/platform-choice/',
  path: '/share/platform-choice/',
  getParentRoute: () => rootRoute,
} as any)

const SharePlatformChoiceTidalRoute = SharePlatformChoiceTidalImport.update({
  id: '/share/platform-choice/tidal',
  path: '/share/platform-choice/tidal',
  getParentRoute: () => rootRoute,
} as any)

const SharePlatformChoiceSpotifyRoute = SharePlatformChoiceSpotifyImport.update(
  {
    id: '/share/platform-choice/spotify',
    path: '/share/platform-choice/spotify',
    getParentRoute: () => rootRoute,
  } as any,
)

const SharePlatformChoiceDeezerRoute = SharePlatformChoiceDeezerImport.update({
  id: '/share/platform-choice/deezer',
  path: '/share/platform-choice/deezer',
  getParentRoute: () => rootRoute,
} as any)

const SharePlatformChoiceAppleMusicRoute =
  SharePlatformChoiceAppleMusicImport.update({
    id: '/share/platform-choice/apple-music',
    path: '/share/platform-choice/apple-music',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/authentification/': {
      id: '/authentification/'
      path: '/authentification'
      fullPath: '/authentification'
      preLoaderRoute: typeof AuthentificationIndexImport
      parentRoute: typeof rootRoute
    }
    '/share/platform-choice/apple-music': {
      id: '/share/platform-choice/apple-music'
      path: '/share/platform-choice/apple-music'
      fullPath: '/share/platform-choice/apple-music'
      preLoaderRoute: typeof SharePlatformChoiceAppleMusicImport
      parentRoute: typeof rootRoute
    }
    '/share/platform-choice/deezer': {
      id: '/share/platform-choice/deezer'
      path: '/share/platform-choice/deezer'
      fullPath: '/share/platform-choice/deezer'
      preLoaderRoute: typeof SharePlatformChoiceDeezerImport
      parentRoute: typeof rootRoute
    }
    '/share/platform-choice/spotify': {
      id: '/share/platform-choice/spotify'
      path: '/share/platform-choice/spotify'
      fullPath: '/share/platform-choice/spotify'
      preLoaderRoute: typeof SharePlatformChoiceSpotifyImport
      parentRoute: typeof rootRoute
    }
    '/share/platform-choice/tidal': {
      id: '/share/platform-choice/tidal'
      path: '/share/platform-choice/tidal'
      fullPath: '/share/platform-choice/tidal'
      preLoaderRoute: typeof SharePlatformChoiceTidalImport
      parentRoute: typeof rootRoute
    }
    '/share/platform-choice/': {
      id: '/share/platform-choice/'
      path: '/share/platform-choice'
      fullPath: '/share/platform-choice'
      preLoaderRoute: typeof SharePlatformChoiceIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/authentification': typeof AuthentificationIndexRoute
  '/share/platform-choice/apple-music': typeof SharePlatformChoiceAppleMusicRoute
  '/share/platform-choice/deezer': typeof SharePlatformChoiceDeezerRoute
  '/share/platform-choice/spotify': typeof SharePlatformChoiceSpotifyRoute
  '/share/platform-choice/tidal': typeof SharePlatformChoiceTidalRoute
  '/share/platform-choice': typeof SharePlatformChoiceIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/authentification': typeof AuthentificationIndexRoute
  '/share/platform-choice/apple-music': typeof SharePlatformChoiceAppleMusicRoute
  '/share/platform-choice/deezer': typeof SharePlatformChoiceDeezerRoute
  '/share/platform-choice/spotify': typeof SharePlatformChoiceSpotifyRoute
  '/share/platform-choice/tidal': typeof SharePlatformChoiceTidalRoute
  '/share/platform-choice': typeof SharePlatformChoiceIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/authentification/': typeof AuthentificationIndexRoute
  '/share/platform-choice/apple-music': typeof SharePlatformChoiceAppleMusicRoute
  '/share/platform-choice/deezer': typeof SharePlatformChoiceDeezerRoute
  '/share/platform-choice/spotify': typeof SharePlatformChoiceSpotifyRoute
  '/share/platform-choice/tidal': typeof SharePlatformChoiceTidalRoute
  '/share/platform-choice/': typeof SharePlatformChoiceIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/authentification'
    | '/share/platform-choice/apple-music'
    | '/share/platform-choice/deezer'
    | '/share/platform-choice/spotify'
    | '/share/platform-choice/tidal'
    | '/share/platform-choice'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/authentification'
    | '/share/platform-choice/apple-music'
    | '/share/platform-choice/deezer'
    | '/share/platform-choice/spotify'
    | '/share/platform-choice/tidal'
    | '/share/platform-choice'
  id:
    | '__root__'
    | '/'
    | '/authentification/'
    | '/share/platform-choice/apple-music'
    | '/share/platform-choice/deezer'
    | '/share/platform-choice/spotify'
    | '/share/platform-choice/tidal'
    | '/share/platform-choice/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthentificationIndexRoute: typeof AuthentificationIndexRoute
  SharePlatformChoiceAppleMusicRoute: typeof SharePlatformChoiceAppleMusicRoute
  SharePlatformChoiceDeezerRoute: typeof SharePlatformChoiceDeezerRoute
  SharePlatformChoiceSpotifyRoute: typeof SharePlatformChoiceSpotifyRoute
  SharePlatformChoiceTidalRoute: typeof SharePlatformChoiceTidalRoute
  SharePlatformChoiceIndexRoute: typeof SharePlatformChoiceIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthentificationIndexRoute: AuthentificationIndexRoute,
  SharePlatformChoiceAppleMusicRoute: SharePlatformChoiceAppleMusicRoute,
  SharePlatformChoiceDeezerRoute: SharePlatformChoiceDeezerRoute,
  SharePlatformChoiceSpotifyRoute: SharePlatformChoiceSpotifyRoute,
  SharePlatformChoiceTidalRoute: SharePlatformChoiceTidalRoute,
  SharePlatformChoiceIndexRoute: SharePlatformChoiceIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/authentification/",
        "/share/platform-choice/apple-music",
        "/share/platform-choice/deezer",
        "/share/platform-choice/spotify",
        "/share/platform-choice/tidal",
        "/share/platform-choice/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/authentification/": {
      "filePath": "authentification/index.tsx"
    },
    "/share/platform-choice/apple-music": {
      "filePath": "share/platform-choice/apple-music.tsx"
    },
    "/share/platform-choice/deezer": {
      "filePath": "share/platform-choice/deezer.tsx"
    },
    "/share/platform-choice/spotify": {
      "filePath": "share/platform-choice/spotify.tsx"
    },
    "/share/platform-choice/tidal": {
      "filePath": "share/platform-choice/tidal.tsx"
    },
    "/share/platform-choice/": {
      "filePath": "share/platform-choice/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
